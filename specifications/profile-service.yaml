openapi: "3.0.0"
info:
  version: 1.0.0
  title: Profiles service
  description: Profiles service
paths:
  "/profiles":
    post:
      tags:
        - Profiles Service
      operationId: register
      summary: Создание профиля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "204":
          description: Success
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my":
    get:
      tags:
        - Profiles Service
      operationId: getMyProfile
      summary: Получение текущего пользователя
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfile"
        "500":
          $ref: "#/components/responses/SystemServerError"
    delete:
      tags:
        - Profiles Service
      operationId: deleteMyProfile
      summary: Удаление текущего пользователя
      responses:
        "204":
          description: Success
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/{profileId}":
    get:
      tags:
        - Profiles Service
      operationId: getProfileById
      summary: Получение пользователя по идентификатору
      parameters:
        - $ref: "#/components/parameters/ProfileId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my/subscriptions":
    get:
      tags:
        - Profiles Service
      operationId: getMySubscriptions
      summary: Получение моих подписок
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscription"
        "500":
          $ref: "#/components/responses/SystemServerError"
    put:
      tags:
        - Profiles Service
      operationId: subscribeToProfile
      summary: Подписаться на пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscribeRequest"
      responses:
        "204":
          description: Success
        "409":
          $ref: "#/components/responses/Conflict"
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my/subscribers":
    get:
      tags:
        - Profiles Service
      operationId: getMySubscribers
      summary: Получение моих подписчиков
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subscriber"
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my/subscriptions/{profileId}":
    delete:
      tags:
        - Profiles Service
      operationId: unsubscribeFromProfile
      summary: Удаление подписки
      parameters:
        - $ref: "#/components/parameters/ProfileId"
      responses:
        "204":
          description: Success
        "409":
          $ref: "#/components/responses/Conflict"
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my/subscriptions/posts":
    get:
      tags:
        - Profiles Service
      operationId: getSubscriptionsPosts
      summary: Получение постов подписок
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "posts-service.yaml#/components/schemas/Post"
        "500":
          $ref: "#/components/responses/SystemServerError"
  "/profiles/my/posts":
    get:
      tags:
        - Profiles Service
      operationId: getMyPosts
      summary: Получение постов текущего пользователя
      parameters:
        - $ref: "#/components/parameters/Size"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/IsVisible"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "posts-service.yaml#/components/schemas/GetPostsResponse"
        "500":
          $ref: "#/components/responses/SystemServerError"
components:
  responses:
    NotFound:
      description: Not NotFound
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: 404
            type: ResourceNotFound
            code: 1404
            message: Resouce not found.
    Conflict:
      description: Business logic error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: 409
            type: BusinessLogicError
            code: 4009
            message: Some of the business rules were violated
    SystemServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: 500
            type: SystemError
            code: 9000
            message: Internal server error.
  parameters:
    ProfileId:
      in: path
      name: profileId
      description: Идентификатор пользователя
      required: true
      schema:
        type: string
        format: uuid
    PostId:
      in: path
      name: postId
      description: Идентификатор поста
      required: true
      schema:
        type: string
        format: uuid
    Size:
      in: query
      name: size
      description: Количество элементов на странице
      required: false
      schema:
        type: integer
        default: 10
    IsVisible:
      in: query
      name: isVisible
      description: Фильтр по видимости поста
      required: false
      schema:
        type: boolean
        default: true
    Page:
      in: query
      name: page
      description: Номер страницы
      required: false
      schema:
        type: integer
    FromDate:
      in: query
      name: fromDate
      description: Дата начала
      required: true
      schema:
        type: string
        format: date
    ToDate:
      in: query
      name: toDate
      description: Дата конца
      required: true
      schema:
        type: string
        format: date
  schemas:
    MyProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Идентификатор профиля
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Идентификатор профиля
        name:
          type: string
          description: Имя пользователя
    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    SubscribeRequest:
      type: object
      properties:
        toProfileId:
          type: string
          format: uuid
          description: Идентификатор профиля
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Идентификатор профиля
        name:
          type: string
          description: Имя пользователя
    Subscriber:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Идентификатор профиля
        name:
          type: string
          description: Имя пользователя
    Error:
      title: Error
      type: object
      properties:
        status:
          type: integer
        type:
          type: string
        code:
          type: integer
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/ErrorDetails"
    ErrorDetails:
      title: Error details
      type: object
      properties:
        type:
          type: string
        code:
          type: integer
        message:
          type: string
        target:
          type: string
